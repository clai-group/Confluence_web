---
title: "EHCE Intensity Trend Analysis"
author: "Jingya Cheng"
date: "2024-01-04"
categories: [code, analysis, trend]
---

# Extreme Heat/Cold Events Intensity Trend Analysis

```{r, include=FALSE}
library(readr)
library(viridis)
library(tidyverse)
library(sf)
library(gridExtra)
library(RColorBrewer)
library(pscl)
library(reshape2)
library(data.table)
library(broom)
```

### Loading the base spatail data set including Counties and States boundaires

```{r}
source_dir <- "./data/"
states_file_path <- file.path(source_dir,
                              "us49_states_geo_tigris.rds")
states_geo <- readRDS(states_file_path)[[1]]
counties_file_path <- file.path(source_dir,
                                "us49_counties_geo_tigris.rds")
counties_geo <- readRDS(counties_file_path)[[1]]
```

### Loading the aggregate extreme events data set

```{r}
dat_path <- file.path(source_dir,
                      "Counties_compiled_admin_geo_ehe_ece_sf_2008_2022.rds")
file_size <- file.info(dat_path)$size
dat <- readRDS(dat_path)[[1]]
```

### Calculating the average intensity with complete yearly intensity records

#### Overall intensity

```{r, warning = FALSE}
dat_table = dat %>%  st_drop_geometry()
## Adding years with no event to the dataset 
lookup_table <- dat_table %>%
  dplyr::select(GEOID, NAME, STUSPS, STATE_NAME) %>%
  distinct() %>%
  filter(!is.na(NAME) & !is.na(STUSPS) & !is.na(STATE_NAME))

fill_na_with_lookup <- function(dat_table, lookup_table, column) {
  na_rows <- is.na(dat_table[[column]])
  lookup_values <- lookup_table[match(dat_table$GEOID[na_rows], lookup_table$GEOID), column]
  dat_table[[column]][na_rows] <- lookup_values
  return(dat_table)
}
year_range <- data.frame(year_numerical = 2008:2022)
unique_geoids <- unique(dat$GEOID)
year_geoid_combinations <- expand.grid(year_numerical = year_range$year_numerical, GEOID = unique_geoids)

## Overall
dat_table$abs_intensity = abs(dat_table$avg_intensity)

county_yearly_intensity <- dat_table %>%
  group_by(GEOID,NAME, STATE_NAME, year_numerical) %>%
  summarize(mean_intensity = mean(abs_intensity),
            avg_impacted_area_hectare = mean(impacted_area_hectare))
dat_intensity_all <- merge(year_geoid_combinations, county_yearly_intensity, by = c("year_numerical", "GEOID"), all = TRUE)
dat_intensity_all["mean_intensity"] <- lapply(dat_intensity_all["mean_intensity"], function(x) ifelse(is.na(x), 0, x))
dat_intensity_all["avg_impacted_area_hectare"] <- lapply(dat_intensity_all["avg_impacted_area_hectare"], function(x) ifelse(is.na(x), 0, x))
dat_intensity_all <- fill_na_with_lookup(dat_intensity_all, 
                                               lookup_table, "NAME")
dat_intensity_all <- fill_na_with_lookup(dat_intensity_all, 
                                               lookup_table, "STATE_NAME")

#linear regression and calcualte percentage change with standardized average intensity 
lm_intensity_all <- dat_intensity_all %>%
  group_by(GEOID, NAME, STATE_NAME) %>%
  do(model = lm(mean_intensity ~ year_numerical + avg_impacted_area_hectare, data = .))

slopes_all <- lm_intensity_all %>%
  rowwise() %>%
  mutate(slope = coef(model)[["year_numerical"]],
         p_value = summary(model)$coefficients["year_numerical","Pr(>|t|)"],
         r_squared = glance(model)$r.squared)

```

```{r}
hist(slopes_all$p_value)
hist(slopes_all$slope)
hist(slopes_all$r_squared)
```

#### Map

```{r, warning = FALSE}
#slopes_cut = slopes_all %>% filter(!(p_value > 0.5))
# Merge with geometry data
county_boundaris_catalog_all <- merge(counties_geo,
          slopes_all %>% st_drop_geometry(),
          by.x="GEOID",
          by.y="GEOID",
          all.x = TRUE,
          all.y = TRUE,
          suffix = c("","_sp")) %>% st_as_sf() 
# Intensity all map
ggplot() +
  geom_sf(data = county_boundaris_catalog_all,
            aes(fill = slope), color = NA,
            lwd = .1) + 
  scale_fill_distiller(palette = "PuOr", limits = c(-2.2, 2.2)
                       ) +
  geom_sf(data = states_geo, fill = NA, color = "grey", size = 0.01, alpha = 0.2) +
  labs(fill = "EHCE Intensity Coefficient") +
  theme_void() + 
  theme(legend.position = "bottom")       
```

#### Extreme Heat Events

```{r, warning = FALSE}
county_heat_intensity <- dat_table %>%
  filter(event_type == "Extreme Heat Event") %>%
  group_by(GEOID,NAME, STATE_NAME, year_numerical) %>%
  summarize(mean_intensity = mean(abs_intensity),
            avg_impacted_area_hectare = mean(impacted_area_hectare))

dat_intensity_ehe <- merge(year_geoid_combinations, county_heat_intensity, by = c("year_numerical", "GEOID"), all = TRUE)
dat_intensity_ehe["mean_intensity"] <- lapply(dat_intensity_ehe["mean_intensity"], function(x) ifelse(is.na(x), 0, x))
dat_intensity_ehe["avg_impacted_area_hectare"] <- lapply(dat_intensity_ehe["avg_impacted_area_hectare"], function(x) ifelse(is.na(x), 0, x))

dat_intensity_ehe <- fill_na_with_lookup(dat_intensity_ehe, lookup_table, "NAME")
dat_intensity_ehe <- fill_na_with_lookup(dat_intensity_ehe, lookup_table, "STATE_NAME")

## Standardized linear regression
lm_intensity_ehe <- dat_intensity_ehe %>%
  group_by(GEOID, NAME, STATE_NAME) %>%
  do(model = lm(mean_intensity ~ year_numerical, data = .))

slopes_ehe <- lm_intensity_ehe %>%
  rowwise() %>%
  mutate(slope = coef(model)[["year_numerical"]],
         p_value = summary(model)$coefficients["year_numerical","Pr(>|t|)"],
         r_squared = glance(model)$r.squared)

```

```{r}
hist(slopes_ehe$p_value)
hist(slopes_ehe$slope)
hist(slopes_ehe$r_squared)
```

#### Map

```{r, warning = FALSE}
#slopes_ehe_cut = slopes_ehe %>% filter(p_value < 0.05)
# Merge with geometry data
county_boundaris_ehe_catalog <- merge(counties_geo,
          slopes_ehe %>% st_drop_geometry(),
          by.x="GEOID",
          by.y="GEOID",
          all.x = TRUE,
          all.y = TRUE,
          suffix = c("","_sp")) %>% st_as_sf() 
# Intensity EHE map
ggplot() +
  geom_sf(data = county_boundaris_ehe_catalog,
            aes(fill = slope),color = NA,
            lwd = .1) + 
  scale_fill_distiller(palette = "PuOr", limit = c(-2.5, 2.5)) +
  geom_sf(data = states_geo, fill = NA, color = "grey", size = 0.5) +
  labs(fill = "EHE Intensity Coefficient") +
  theme_void() + 
  theme(legend.position = "bottom")
```

#### Extreme Cold Events

```{r, warning = FALSE}
county_cold_intensity <- dat_table %>%
  filter(event_type == "Extreme Cold Event") %>%
  group_by(GEOID,NAME, STATE_NAME, year_numerical) %>%
  summarize(mean_intensity = mean(abs_intensity),
            avg_impacted_area_hectare = mean(impacted_area_hectare))

dat_intensity_ece <- merge(year_geoid_combinations, county_cold_intensity, by = c("year_numerical", "GEOID"), all = TRUE)
dat_intensity_ece["mean_intensity"] <- lapply(dat_intensity_ece["mean_intensity"], function(x) ifelse(is.na(x), 0, x))
dat_intensity_ece["avg_impacted_area_hectare"] <- lapply(dat_intensity_ece["avg_impacted_area_hectare"], function(x) ifelse(is.na(x), 0, x))

dat_intensity_ece <- fill_na_with_lookup(dat_intensity_ece, lookup_table, "NAME")
dat_intensity_ece <- fill_na_with_lookup(dat_intensity_ece, lookup_table, "STATE_NAME")

lm_intensity_ece <- dat_intensity_ece %>%
  group_by(GEOID, NAME, STATE_NAME) %>%
  do(model = lm(mean_intensity ~ year_numerical, data = .))

slopes_ece <- lm_intensity_ece %>%
  rowwise() %>%
  mutate(slope = coef(model)[["year_numerical"]],
         p_value = summary(model)$coefficients["year_numerical","Pr(>|t|)"],
         r_squared = glance(model)$r.squared)

```

```{r}
hist(slopes_ece$p_value)
hist(slopes_ece$slope)
hist(slopes_ece$r_squared)
```

#### Map

```{r, warning = FALSE}
#slopes_ece_cut = slopes_ece %>% filter(p_value < 0.05)
# Merge with geometry data
county_boundaris_ece_catalog <- merge(counties_geo,
          slopes_ece %>% st_drop_geometry(),
          by.x="GEOID",
          by.y="GEOID",
          all.x = TRUE,
          all.y = TRUE,
          suffix = c("","_sp")) %>% st_as_sf() 
# Intensity ECE map
ggplot() +
  geom_sf(data = county_boundaris_ece_catalog,
            aes(fill = slope), color = NA,
            lwd = .1) + 
  scale_fill_distiller(palette = "PuOr", limit = c(-3.75, 3.75)) +
  geom_sf(data = states_geo, fill = NA, color = "grey", size = 0.5) +
  labs(fill = "ECE Intensity Coefficient") +
  theme_void() + 
  theme(legend.position = "bottom")
```
