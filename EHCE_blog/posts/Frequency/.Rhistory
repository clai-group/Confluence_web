})
})
slopes_all_cut = slopes_all %>% filter(abs(percentage_change) < 45)
slopes_all_cut = slopes_all_cut %>%
mutate(percentage_change_cat = case_when(
percentage_change < -10 ~ "<-10%",
percentage_change >=-10 & percentage_change<= -5 ~ "-10 - -5%",
percentage_change >-5 & percentage_change<= -1 ~ "-5 - -1%",
percentage_change >-1 & percentage_change<= 0 ~ "-1-0%",
percentage_change >0 & percentage_change<= 1 ~ "0-1%",
percentage_change >1 & percentage_change <= 5 ~ "1-5%",
percentage_change >5 & percentage_change <= 10 ~ "5-10%",
TRUE ~ ">10%"
)) %>%
mutate(percentage_change_cat = factor(percentage_change_cat,
levels = c("<-10%","-10 - -5%","-5 - -1%",
"-1-0%","0-1%",
"1-5%", "5-10%", ">10%")))
#alabama = slopes_all_area_freq %>% filter(STATE_NAME == "Alabama")
#anova_result <- aov(slope ~ NAME, data = alabama)
#summary(anova_result)
#summary(anova_result)[[1]][["Pr(>F)"]][1]
#anova_results <- list()
#for (state_name in unique(slopes_all_area_freq$STATE_NAME)) {
#  state_data <- slopes_all_area_freq[slopes_all_area_freq$STATE_NAME == state_name, ]
#  if (length(unique(state_data$NAME)) > 1) {
#      anova_results[[state_name]] <- summary(aov(slope ~ NAME, data = state_data))
#  }
#}
# Merge with geometry data
county_boundaries_catalog_all <- merge(counties_geo,
slopes_all_cut %>% st_drop_geometry(),
by.x="GEOID",
by.y="GEOID",
all.x = TRUE,
all.y = TRUE,
suffix = c("","_sp")) %>% st_as_sf()
# Frequency all map with grey for non-significant p-values
#ggplot() +
#  geom_sf(data = county_boundaries_catalog_all,
#            aes(fill = percentage_change), color = NA,
#            lwd = .1) +
#  scale_fill_distiller(palette = "RdBu", limits = c(-17,17)) +
#  geom_sf(data = states_geo, fill = NA, color = "grey", size = 0.5) +
#  labs(fill = "Frequency (Area adjusted)") +
#  theme_void() +
#  theme(legend.position = "bottom")
#heat_colors <- c("<1%" = "lightblue", "1-5%" = "yellow", "5-10%" = "orange", ">10%" = "red")
palette <- rev(brewer.pal(8, "PuOr"))
p_perc_change_all = ggplot() +
geom_sf(data = county_boundaries_catalog_all,
aes(fill = percentage_change_cat), color = NA,
lwd = .1) +
scale_fill_manual(values = palette, na.translate = F) +
geom_sf(data = states_geo, fill = NA, color = "black", size = 0.1) +
labs(fill = "Percentage Change in Frequency (Area adjusted)") +
theme_void() +
theme(legend.position = "bottom")
p_perc_change_all
png("~/Desktop/ehe_ece_data_integration/Frequency_maps/perc_change_all.png",
height = 5, width = 7, res = 300, units = "in")
print(p_perc_change_all)
dev.off()
event_count_ehe <- dat_table %>%
filter(event_type == "Extreme Heat Event") %>%
group_by(GEOID, NAME, STATE_NAME, year_numerical) %>%
summarize(event_count = n())
event_count_ehe <- merge(year_geoid_combinations, event_count_ehe, by = c("year_numerical", "GEOID"), all = TRUE)
event_count_ehe["event_count"] <- lapply(event_count_ehe["event_count"], function(x) ifelse(is.na(x), 0, x))
event_count_ehe <- fill_na_with_lookup(event_count_ehe, lookup_table, "NAME")
event_count_ehe <- fill_na_with_lookup(event_count_ehe, lookup_table, "STATE_NAME")
# Merge with average total area sq miles summary
avg_total_area_ehe <- dat_table %>%
group_by(GEOID, NAME, STATE_NAME) %>%
summarize(avg_total_area_sq_mile = mean(total_area_sq_mile))
event_count_ehe = merge(event_count_ehe, avg_total_area_ehe,
by = c("GEOID", "NAME", "STATE_NAME"), all = TRUE)
event_count_ehe = event_count_ehe %>%
group_by(GEOID, NAME, STATE_NAME) %>%
mutate(mean_event_count = mean(event_count),
sd = sd(event_count),
outlier_upper = mean_event_count + 3*sd,
outlier_lower = mean_event_count - 3*sd ) %>%
mutate(event_count_outlier_rm =
ifelse((event_count>=outlier_lower&event_count<=outlier_upper), event_count, 0))
nrow(event_count_ehe %>% filter(event_count != event_count_outlier_rm))
# NB Regression
#poisson_ehe_area_adj <- event_count_ehe %>%
#  group_by(GEOID, NAME, STATE_NAME) %>%
#  do(model = MASS::glm.nb(event_count_outlier_rm ~ year_numerical +
#                            offset(log(avg_total_area_sq_mile)), data = .))
#slopes_ehe_poi_area_adj <- poisson_ehe_area_adj %>%
#  rowwise() %>%
#  mutate(
#    slope = coef(model)[["year_numerical"]],
#    percentage_change = (exp(slope) - 1) * 100,
#    p_value = summary(model)$coefficients["year_numerical","Pr(>|z|)"],
#    residual_deviance = deviance(model),
#    df_residual = df.residual(model),
#    deviance_ratio = residual_deviance / df_residual,
#    dispersion = sum(residuals(model, type = "pearson")^2) / df_residual,
#    aic = AIC(model), bic = BIC(model)
#  ) %>%
#  ungroup() %>%
#  dplyr::select(GEOID, NAME, STATE_NAME, slope, percentage_change,p_value,
#         residual_deviance, df_residual,
#         deviance_ratio, dispersion, aic,bic)
slopes_ehe_poi_area_adj <- event_count_ehe %>%
group_by(GEOID, NAME, STATE_NAME) %>%
do({
# Fit the Negative Binomial model
tryCatch({
model = MASS::glm.nb(event_count_outlier_rm ~ year_numerical +
offset(log(avg_total_area_sq_mile)), data = .)
coef_model = coef(model)["year_numerical"]
percentage_change = (exp(coef_model) - 1) * 100
p_values = summary(model)$coefficients["year_numerical", "Pr(>|z|)"]
aic_value = AIC(model)
bic_value = BIC(model)
data.frame(coef = coef_model, percentage_change, p_value = p_values,
AIC = aic_value, BIC = bic_value)
}, error = function(e) {
# Return NA in case of an error
data.frame(coef = NA, percentage_change = NA, p_value = NA,
AIC = NA, BIC = NA)
})
})
slopes_ehe_cut = slopes_ehe_poi_area_adj %>% filter(abs(percentage_change) < 45)
slopes_ehe_cut = slopes_ehe_cut %>%
mutate(percentage_change_cat = case_when(
percentage_change < -10 ~ "<-10%",
percentage_change >=-10 & percentage_change<= -5 ~ "-10 - -5%",
percentage_change >-5 & percentage_change<= -1 ~ "-5 - -1%",
percentage_change >-1 & percentage_change<= 0 ~ "-1-0%",
percentage_change >0 & percentage_change<= 1 ~ "0-1%",
percentage_change >1 & percentage_change <= 5 ~ "1-5%",
percentage_change >5 & percentage_change <= 10 ~ "5-10%",
TRUE ~ ">10%"
)) %>%
mutate(percentage_change_cat = factor(percentage_change_cat,
levels = c("<-10%","-10 - -5%","-5 - -1%",
"-1-0%","0-1%",
"1-5%", "5-10%", ">10%")))
# Merge with geometry data
county_boundaris_ehe_catalog <- merge(counties_geo,
slopes_ehe_cut %>% st_drop_geometry(),
by.x="GEOID",
by.y="GEOID",
all.x = TRUE,
all.y = TRUE,
suffix = c("","_sp")) %>% st_as_sf()
# Frequency EHE map
#ggplot() +
#  geom_sf(data = county_boundaris_ehe_catalog,
#            aes(fill = percentage_change), color = NA,
#            lwd = .1) +
#  scale_fill_distiller(palette = "RdBu", limit = c(-42.5, 42.5)) +
#  geom_sf(data = states_geo, fill = NA, color = "grey", size = 0.1) +
#  labs(fill = "Frequency EHE (Adjusted by Area)") +
#  theme_void() +
#  theme(legend.position = "bottom")
#heat_colors <- c("<1%" = "lightblue", "1-5%" = "yellow", "5-10%" = "orange", ">10%" = "red")
#palette_ehe <- rev(brewer.pal(8, "RdBu"))
p_perc_change_ehe = ggplot() +
geom_sf(data = county_boundaris_ehe_catalog,
aes(fill = percentage_change_cat), color = NA,
lwd = .1) +
scale_fill_manual(values = palette, na.translate = F) +
geom_sf(data = states_geo, fill = NA, color = "black", size = 0.1) +
labs(fill = "Percentage Change in Frequency EHE (Area adjusted)") +
theme_void() +
theme(legend.position = "bottom")
p_perc_change_ehe
png("~/Desktop/ehe_ece_data_integration/Frequency_maps/perc_change_ehe.png",
height = 5, width = 7, res = 300, units = "in")
print(p_perc_change_ehe)
dev.off()
event_count_ece <- dat_table %>%
filter(event_type == "Extreme Cold Event") %>%
group_by(GEOID, NAME, STATE_NAME, year_numerical) %>%
summarize(event_count = n())
event_count_ece <- merge(year_geoid_combinations, event_count_ece, by = c("year_numerical", "GEOID"), all = TRUE)
event_count_ece["event_count"] <- lapply(event_count_ece["event_count"], function(x) ifelse(is.na(x), 0, x))
event_count_ece <- fill_na_with_lookup(event_count_ece, lookup_table, "NAME")
event_count_ece <- fill_na_with_lookup(event_count_ece, lookup_table, "STATE_NAME")
# Merge with average total area sq miles summary
avg_total_area_ece <- dat_table %>%
group_by(GEOID, NAME, STATE_NAME) %>%
summarize(avg_total_area_sq_mile = mean(total_area_sq_mile))
event_count_ece = merge(event_count_ece, avg_total_area_ece,
by = c("GEOID", "NAME", "STATE_NAME"), all = TRUE)
event_count_ece = event_count_ece %>%
group_by(GEOID, NAME, STATE_NAME) %>%
mutate(mean_event_count = mean(event_count),
sd = sd(event_count),
outlier_upper = mean_event_count + 3*sd,
outlier_lower = mean_event_count - 3*sd ) %>%
mutate(event_count_outlier_rm =
ifelse((event_count>=outlier_lower&event_count<=outlier_upper), event_count, 0))
nrow(event_count_ece %>% filter(event_count != event_count_outlier_rm))
# NB Regression
slopes_ece_poi_area_adj <- event_count_ece %>%
group_by(GEOID, NAME, STATE_NAME) %>%
do({
# Fit the Negative Binomial model
tryCatch({
model = MASS::glm.nb(event_count_outlier_rm ~ year_numerical +
offset(log(avg_total_area_sq_mile)), data = .)
coef_model = coef(model)["year_numerical"]
percentage_change = (exp(coef_model) - 1) * 100
p_values = summary(model)$coefficients["year_numerical", "Pr(>|z|)"]
aic_value = AIC(model)
bic_value = BIC(model)
data.frame(coef = coef_model, percentage_change, p_value = p_values,
AIC = aic_value, BIC = bic_value)
}, error = function(e) {
# Return NA in case of an error
data.frame(coef = NA, percentage_change = NA, p_value = NA,
AIC = NA, BIC = NA)
})
})
#poisson_ece_area_adj <- event_count_ece %>%
#  group_by(GEOID, NAME, STATE_NAME) %>%
#  do(model = glm(event_count ~ year_numerical +
#                   offset(log(avg_total_area_sq_mile)), family = quasipoisson, data = .))
slopes_ece_cut = slopes_ece_poi_area_adj %>% filter(abs(percentage_change) < 45)
slopes_ece_cut = slopes_ece_cut %>%
mutate(percentage_change_cat = case_when(
percentage_change < -10 ~ "<-10%",
percentage_change >=-10 & percentage_change<= -5 ~ "-10 - -5%",
percentage_change >-5 & percentage_change<= -1 ~ "-5 - -1%",
percentage_change >-1 & percentage_change<= 0 ~ "-1-0%",
percentage_change >0 & percentage_change<= 1 ~ "0-1%",
percentage_change >1 & percentage_change <= 5 ~ "1-5%",
percentage_change >5 & percentage_change <= 10 ~ "5-10%",
percentage_change > 10 ~ ">10%"
)) %>%
mutate(percentage_change_cat = factor(percentage_change_cat,
levels = c("<-10%","-10 - -5%","-5 - -1%",
"-1-0%","0-1%",
"1-5%", "5-10%", ">10%")))
# Merge with geometry data
county_boundaris_ece_catalog <- merge(counties_geo,
slopes_ece_cut %>% st_drop_geometry(),
by.x="GEOID",
by.y="GEOID",
all.x = TRUE,
all.y = TRUE,
suffix = c("","_sp")) %>% st_as_sf()
# Frequency ECE map
#ggplot() +
#  geom_sf(data = county_boundaris_ece_catalog,
#            aes(fill = percentage_change), color = NA,
#            lwd = .1) +
#  scale_fill_distiller(palette = "RdBu", limit = c(-27, 27)) +
#  geom_sf(data = states_geo, fill = NA, color = "grey", size = 0.5) +
#  labs(fill = "Frequency ECE (Adjusted by area)") +
#  theme_void() +
#  theme(legend.position = "bottom")
#heat_colors <- c("<1%" = "lightblue", "1-5%" = "yellow", "5-10%" = "orange", ">10%" = "red")
#palette_ece <- brewer.pal(8, "RdBu")
p_perc_change_ece = ggplot() +
geom_sf(data = county_boundaris_ece_catalog,
aes(fill = percentage_change_cat), color = NA,
lwd = .1) +
scale_fill_manual(values = palette, na.translate = F) +
geom_sf(data = states_geo, fill = NA, color = "black", size = 0.1) +
labs(fill = "Percentage Change in Frequency ECE (Area adjusted)") +
theme_void() +
theme(legend.position = "bottom")
p_perc_change_ece
png("~/Desktop/ehe_ece_data_integration/Frequency_maps/perc_change_ece.png",
height = 5, width = 7, res = 300, units = "in")
print(p_perc_change_ece)
dev.off()
# Prediction
nb_reg_model = merge(nb_all_area_freq, avg_total_area)
predictions_2025 <- nb_reg_model %>%
rowwise() %>%
mutate(predicted_2025 = predict(model, newdata = data.frame(
year_numerical = 2025,
avg_total_area_sq_mile = avg_total_area_sq_mile
), type = "response")) %>%
ungroup() %>%
dplyr::select(GEOID, NAME, STATE_NAME, predicted_2025)
# With CI
predictions_2025_with_ci <-nb_reg_model %>%
rowwise() %>%
mutate(
ci_results = list(tryCatch({
pred_response = predict(model, newdata = data.frame(
year_numerical = 2025,
avg_total_area_sq_mile = avg_total_area_sq_mile
), type = "response", se.fit = TRUE)
ci_lower = exp(pred_response$fit - qnorm(0.975) * pred_response$se.fit)
ci_upper = exp(pred_response$fit + qnorm(0.975) * pred_response$se.fit)
list(predicted_2025 = pred_response$fit, ci_lower = ci_lower, ci_upper = ci_upper)
}, error = function(e) {
# Return NA if error
list(predicted_2025 = NA, ci_lower = NA, ci_upper = NA)
}))
) %>%
ungroup() %>%
mutate(
predicted_2025 = map_dbl(ci_results, "predicted_2025"),
ci_lower = map_dbl(ci_results, "ci_lower"),
ci_upper = map_dbl(ci_results, "ci_upper")
) %>%
dplyr::select(GEOID, NAME, STATE_NAME, predicted_2025, ci_lower, ci_upper)
View(houston)
View(slopes_all)
houston %>% zeroinfl(event_count ~ year_numerical, data = ., dist = "negbin")
-6.104439e-02
View(h_zinb)
h_zinb = houston %>% zeroinfl(event_count ~ year_numerical, data = ., dist = "negbin")
summary(h_zinb)
summary(h_zinb)[coefficients]
coef(h_zinb)
coef(h_zinb)[2]
slopes_ece_zinb_area_adj <- event_count_ehe %>%
group_by(GEOID, NAME, STATE_NAME) %>%
do({
# Fit the Negative Binomial model
tryCatch({
model = zeroinfl(event_count_outlier_rm ~ year_numerical | 1 +
offset(log(avg_total_area_sq_mile)), data = .,
dist = "negbin")
coef_model = coef(model)[2]
percentage_change = (exp(coef_model) - 1) * 100
data.frame(coef = coef_model, percentage_change)
}, error = function(e) {
# Return NA in case of an error
data.frame(coef = NA, percentage_change = NA)
})
})
View(slopes_ece_zinb_area_adj)
View(slopes_ehe_poi_area_adj)
View(event_count_ehe)
1.415005e+01
event_count_ehe %>% group_by(GEOID, NAME, STATE_NAME) %>%
filter(any(event_count_outlier_rm == 0))
no_zeror_ehe = event_count_ehe %>% group_by(GEOID, NAME, STATE_NAME) %>%
filter(!any(event_count_outlier_rm == 0))
no_zero_ehe = event_count_ehe %>% group_by(GEOID, NAME, STATE_NAME) %>%
filter(!any(event_count_outlier_rm == 0))
View(no_zero_ehe)
no_zero_ehe = event_count_ehe %>% group_by(GEOID, NAME, STATE_NAME) %>%
filter(!any(event_count_outlier_rm == 0))%>% select(GEOID, NAME, STATE_NAME) %>%
distinct()
no_zero_ehe = event_count_ehe %>% group_by(GEOID, NAME, STATE_NAME) %>%
filter(!any(event_count_outlier_rm == 0))%>% dplyr::select(GEOID, NAME, STATE_NAME) %>%
distinct()
no_zero_ehe = event_count_ehe %>% group_by(GEOID, NAME, STATE_NAME) %>%
filter(!any(event_count_outlier_rm == 0)) %>%
dplyr::select(GEOID) %>%
distinct()
View(slopes_ece_poi_area_adj)
slopes_ehe_zinb_area_adj <- event_count_ehe %>%
group_by(GEOID, NAME, STATE_NAME) %>%
do({
# Fit the Negative Binomial model
tryCatch({
model = zeroinfl(event_count_outlier_rm ~ year_numerical | 1 +
offset(log(avg_total_area_sq_mile)), data = .,
dist = "negbin")
coef_model = coef(model)[2]
percentage_change = (exp(coef_model) - 1) * 100
data.frame(coef = coef_model, percentage_change)
}, error = function(e) {
# Return NA in case of an error
data.frame(coef = NA, percentage_change = NA)
})
})
View(slopes_ehe_poi_area_adj)
no_zero_ehe = event_count_ehe %>% group_by(GEOID, NAME, STATE_NAME) %>%
filter(!any(event_count_outlier_rm == 0)) %>%
dplyr::select(GEOID) %>%
distinct()
View(slopes_ehe_zinb_area_adj)
slopes_ehe_poi_area_adj[slopes_ehe_poi_area_adj$GEOID %in% no_zero_ehe]
slopes_ehe_poi_area_adj$GEOID %in% no_zero_ehe
slopes_ehe_poi_area_adj[slopes_ehe_poi_area_adj$GEOID %in% no_zero_ehe]
slopes_ehe_poi_area_adj %>% filter(GEOID == no_zero_ehe)
no_zero_ehe
no_zero_ehe = event_count_ehe %>% group_by(GEOID, NAME, STATE_NAME) %>%
filter(!any(event_count_outlier_rm == 0)) %>%
dplyr::select(GEOID) %>%
distinct()
slopes_ehe_poi_area_adj %>% filter(GEOID == no_zero_ehe)
no_zero_ehe
no_zero_ehe = event_count_ehe %>% group_by(GEOID, NAME, STATE_NAME) %>%
filter(!any(event_count_outlier_rm == 0)) %>%
dplyr::select(GEOID) %>%
distinct()
no_zero_ehe
View(no_zero_ehe)
no_zero_ehe = event_count_ehe %>% group_by(GEOID, NAME, STATE_NAME) %>%
filter(!any(event_count_outlier_rm == 0)) %>%
ungroup() %>%
dplyr::select(GEOID) %>%
distinct()
slopes_ehe_poi_area_adj[slopes_ehe_poi_area_adj$GEOID %in% no_zero_ehe]
no_zero_ehe
slopes_ehe_poi_area_adj %>% filter(GEOID == no_zero_ehe)
slopes_ehe_poi_area_adj[slopes_ehe_poi_area_adj$GEOID %in% no_zero_ehe,]
slopes_ehe_poi_area_adj[,slopes_ehe_poi_area_adj$GEOID %in% no_zero_ehe]
no_zero_ehe
slopes_ehe_poi_area_adj$GEOID
no_zero_ehe
slopes_ehe_poi_area_adj[slopes_ehe_poi_area_adj$GEOID %in% no_zero_ehe,]
slopes_ehe_poi_area_adj[slopes_ehe_poi_area_adj$GEOID %in% no_zero_ehe$GEOID,]
no_zero_ehe = event_count_ehe %>% group_by(GEOID, NAME, STATE_NAME) %>%
filter(!any(event_count_outlier_rm == 0)) %>%
ungroup() %>%
dplyr::select(GEOID, NAME, STATE_NAME) %>%
distinct()
slopes_ehe_poi_area_adj[slopes_ehe_poi_area_adj$GEOID %in% no_zero_ehe$GEOID,]
zero_ehe = event_count_ehe %>% group_by(GEOID, NAME, STATE_NAME) %>%
filter(any(event_count_outlier_rm == 0)) %>%
ungroup() %>%
dplyr::select(GEOID, NAME, STATE_NAME) %>%
distinct()
2416+692
slopes_ehe_zinb_area_adj[slopes_ehe_zinb_area_adj$GEOID %in% zero_ehe$GEOID,]
slope_ehe_zipnb = slopes_ehe_zinb_area_adj[slopes_ehe_zinb_area_adj$GEOID %in% zero_ehe$GEOID,]
slope_ehe_nb = slopes_ehe_poi_area_adj[slopes_ehe_poi_area_adj$GEOID %in% no_zero_ehe$GEOID,]
slope_ehe_combine = rbind(slope_ehe_nb, slope_ehe_zipnb)
View(slope_ehe_combine)
county_boundaris_ece_catalog <- merge(counties_geo,
slope_ehe_combine %>% st_drop_geometry(),
by.x="GEOID",
by.y="GEOID",
all.x = TRUE,
all.y = TRUE,
suffix = c("","_sp")) %>% st_as_sf()
slope_ehe_combine = slope_ehe_combine %>%
mutate(percentage_change_cat = case_when(
percentage_change < -10 ~ "<-10%",
percentage_change >=-10 & percentage_change<= -5 ~ "-10 - -5%",
percentage_change >-5 & percentage_change<= -1 ~ "-5 - -1%",
percentage_change >-1 & percentage_change<= 0 ~ "-1-0%",
percentage_change >0 & percentage_change<= 1 ~ "0-1%",
percentage_change >1 & percentage_change <= 5 ~ "1-5%",
percentage_change >5 & percentage_change <= 10 ~ "5-10%",
percentage_change > 10 ~ ">10%"
)) %>%
mutate(percentage_change_cat = factor(percentage_change_cat,
levels = c("<-10%","-10 - -5%","-5 - -1%",
"-1-0%","0-1%",
"1-5%", "5-10%", ">10%")))
county_boundaris_ece_catalog <- merge(counties_geo,
slope_ehe_combine %>% st_drop_geometry(),
by.x="GEOID",
by.y="GEOID",
all.x = TRUE,
all.y = TRUE,
suffix = c("","_sp")) %>% st_as_sf()
p_perc_change_ece = ggplot() +
geom_sf(data = county_boundaris_ece_catalog,
aes(fill = percentage_change_cat), color = NA,
lwd = .1) +
scale_fill_manual(values = palette, na.translate = F) +
geom_sf(data = states_geo, fill = NA, color = "black", size = 0.1) +
labs(fill = "Percentage Change in Frequency ECE (Area adjusted)") +
theme_void() +
theme(legend.position = "bottom")
ggplot() +
geom_sf(data = county_boundaris_ece_catalog,
aes(fill = percentage_change_cat), color = NA,
lwd = .1) +
scale_fill_manual(values = palette, na.translate = F) +
geom_sf(data = states_geo, fill = NA, color = "black", size = 0.1) +
labs(fill = "Percentage Change in Frequency ECE (Area adjusted)") +
theme_void() +
theme(legend.position = "bottom")
ggplot() +
geom_sf(data = county_boundaris_ece_catalog,
aes(fill = percentage_change_cat), color = NA,
lwd = .1) +
scale_fill_manual(values = palette, na.translate = F) +
geom_sf(data = states_geo, fill = NA, color = "black", size = 0.1) +
labs(fill = "Percentage Change in Frequency EHE (Area adjusted)") +
theme_void() +
theme(legend.position = "bottom")
p_combine_ehe = ggplot() +
geom_sf(data = county_boundaris_ece_catalog,
aes(fill = percentage_change_cat), color = NA,
lwd = .1) +
scale_fill_manual(values = palette, na.translate = F) +
geom_sf(data = states_geo, fill = NA, color = "black", size = 0.1) +
labs(fill = "Percentage Change in Frequency EHE (Area adjusted)") +
theme_void() +
theme(legend.position = "bottom")
p_combine_ehe
png("~/Desktop/combine_count_ehe_per_area.png",
height = 5, width = 7, res = 300, units = "in")
print(p_combine_ehe)
dev.off()
p_combine_ehe = ggplot() +
geom_sf(data = county_boundaris_ece_catalog,
aes(fill = percentage_change_cat), color = NA,
lwd = .1) +
scale_fill_manual(values = palette, na.translate = F) +
geom_sf(data = states_geo, fill = NA, color = "black", size = 0.1) +
labs(fill = "Percentage Change in Frequency EHE (two models)") +
theme_void() +
theme(legend.position = "bottom")
p_combine_ehe
png("~/Desktop/combine_count_ehe_per_area.png",
height = 5, width = 7, res = 300, units = "in")
print(p_combine_ehe)
dev.off()
